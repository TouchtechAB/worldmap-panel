{"version":3,"sources":["../src/worldmap_ctrl.js"],"names":[],"mappings":"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","file":"worldmap_ctrl.js","sourcesContent":["import {MetricsPanelCtrl} from 'app/plugins/sdk';\nimport _ from 'lodash';\nimport TimeSeries from 'app/core/time_series2';\nimport kbn from 'app/core/utils/kbn';\nimport mapRenderer from './map_renderer';\nimport './css/worldmap-panel.css!';\n\nconst panelDefaults = {\n  mapCenter: '(0째, 0째)',\n  mapCenterLatitude: 0,\n  mapCenterLongitude: 0,\n  initialZoom: 1,\n  valueName: 'total',\n  circleSizeFactor: 1,\n  circleMinSize: 2,\n  circleMaxSize: 30,\n  locationData: 'countries',\n  thresholds: '0,10',\n  colors: ['rgba(245, 54, 54, 0.9)', 'rgba(237, 129, 40, 0.89)', 'rgba(50, 172, 45, 0.97)'],\n  unitSingle: '',\n  unitPlural: ''\n};\n\nconst tileServers = {\n  'Estri WorldGrey': {url: 'http://server.arcgisonline.com/ArcGIS/rest/services/Canvas/World_Light_Gray_Base/MapServer/tile/{z}/{y}/{x}', attribution: 'Tiles &copy; Esri &mdash; Esri, DeLorme, NAVTEQ', subdomains: '' },\n  'OpenStreetMap': {url: 'http://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', attribution: 'Map data &copy; <a href=\"http://openstreetmap.org\">OpenStreetMap</a> contributors, <a href=\"http://creativecommons.org/licenses/by-sa/2.0/\">CC-BY-SA</a>', subdomains: 'abc'},\n  'Mapquest': {url: 'http://otile{s}.mqcdn.com/tiles/1.0.0/map/{z}/{x}/{y}.png', attribution: 'Tiles by <a href=\"http://www.mapquest.com/\">MapQuest</a> &mdash; ' +\n            'Map data &copy; <a href=\"http://openstreetmap.org\">OpenStreetMap</a> contributors, <a href=\"http://creativecommons.org/licenses/by-sa/2.0/\">CC-BY-SA</a>',\n            subdomains: '1234'},\n  'CartoDB Positron': { url: 'http://{s}.basemaps.cartocdn.com/light_all/{z}/{x}/{y}.png', attribution: '&copy; <a href=\"http://www.openstreetmap.org/copyright\">OpenStreetMap</a> &copy; <a href=\"http://cartodb.com/attributions\">CartoDB</a>', subdomains: 'abcd'},\n  'CartoDB Dark': {url: 'http://a.basemaps.cartocdn.com/dark_all/{z}/{x}/{y}.png', attribution: '&copy; <a href=\"http://www.openstreetmap.org/copyright\">OpenStreetMap</a> &copy; <a href=\"http://cartodb.com/attributions\">CartoDB</a>', subdomains: '1234'}\n};\n\nconst mapCenters = {\n  '(0째, 0째)': {mapCenterLatitude: 0, mapCenterLongitude: 0},\n  'North America': {mapCenterLatitude: 40, mapCenterLongitude: -100},\n  'Europe': {mapCenterLatitude: 46, mapCenterLongitude: 14},\n  'West Asia': {mapCenterLatitude: 26, mapCenterLongitude: 53},\n  'SE Asia': {mapCenterLatitude: 10, mapCenterLongitude: 106}\n};\n\nexport class WorldmapCtrl extends MetricsPanelCtrl {\n  constructor($scope, $injector, contextSrv) {\n    super($scope, $injector);\n\n    this.setDefaults(contextSrv);\n\n    this.events.on('init-edit-mode', this.onInitEditMode.bind(this));\n    this.events.on('data-received', this.onDataReceived.bind(this));\n    this.events.on('panel-teardown', this.onPanelTeardown.bind(this));\n\n    this.loadLocationDataFromFile();\n  }\n\n  setDefaults(contextSrv) {\n    if (this.panel && !this.panel.tileServer) {\n      this.panel.tileServer = contextSrv.user.lightTheme ? 'CartoDB Positron' : 'CartoDB Dark';\n    }\n    _.defaults(this.panel, panelDefaults);\n    this.setMapSaturationClass();\n    this.tileServers = tileServers;\n  }\n\n  setMapSaturationClass() {\n    if (this.panel.tileServer === 'CartoDB Dark') {\n      this.saturationClass = 'map-darken';\n    } else if (this.panel.tileServer === 'Mapquest') {\n      this.saturationClass = 'map-lighten';\n    } else {\n      this.saturationClass = '';\n    }\n  }\n\n  loadLocationDataFromFile() {\n    if (!this.map) {\n      window.$.getJSON('public/plugins/grafana-worldmap-panel/' + this.panel.locationData + '.json').then(res => {\n        this.locations = res;\n        this.render();\n      });\n    }\n  }\n\n  onPanelTeardown() {\n    this.circles = [];\n    if (this.circlesLayer) this.map.removeLayer(this.circlesLayer);\n    if (this.legend) this.legend.removeFrom(this.map);\n    this.legend = null;\n    if (this.map) this.map.remove();\n  }\n\n  onInitEditMode() {\n    this.addEditorTab('Worldmap', 'public/plugins/grafana-worldmap-panel/editor.html', 2);\n  }\n\n  onDataReceived(dataList) {\n    this.series = dataList.map(this.seriesHandler.bind(this));\n    const data = [];\n    this.setValues(data);\n    this.data = data;\n\n    this.updateThresholdData();\n\n    this.render();\n  }\n\n  setValues(data) {\n    if (this.series && this.series.length > 0) {\n      this.series.forEach(serie => {\n        const lastPoint = _.last(serie.datapoints);\n        const lastValue = _.isArray(lastPoint) ? lastPoint[0] : null;\n\n        if (_.isString(lastValue)) {\n          data.push({key: serie.alias, value: 0, valueFormatted: lastValue, valueRounded: 0});\n        } else {\n          const dataValue = {\n            key: serie.alias,\n            value: serie.stats[this.panel.valueName],\n            flotpairs: serie.flotpairs,\n            valueFormatted: lastValue,\n            valueRounded: 0\n          };\n\n          dataValue.valueRounded = kbn.roundValue(dataValue.value, 0);\n          data.push(dataValue);\n        }\n      });\n    }\n  }\n\n  seriesHandler(seriesData) {\n    const series = new TimeSeries({\n      datapoints: seriesData.datapoints,\n      alias: seriesData.target,\n    });\n\n    series.flotpairs = series.getFlotPairs(this.panel.nullPointMode);\n    return series;\n  }\n\n  setNewMapCenter() {\n    if (this.panel.mapCenter !== 'custom') {\n      this.panel.mapCenterLatitude = mapCenters[this.panel.mapCenter].mapCenterLatitude;\n      this.panel.mapCenterLongitude = mapCenters[this.panel.mapCenter].mapCenterLongitude;\n    }\n    this.mapCenterMoved = true;\n    this.render();\n  }\n\n  setZoom() {\n    this.map.setZoom(this.panel.initialZoom);\n  }\n\n  changeTileServer() {\n    this.legend.removeFrom(this.map);\n    this.legend = null;\n    this.map.remove();\n    this.map = null;\n    this.render();\n  }\n\n  changeThresholds() {\n    this.updateThresholdData();\n    this.legend.update();\n    this.render();\n  }\n\n  updateThresholdData() {\n    this.data.thresholds = this.panel.thresholds.split(',').map(strValue => {\n      return Number(strValue.trim());\n    });\n  }\n\n  changeLocationData() {\n    window.$.getJSON('public/plugins/grafana-worldmap-panel/' + this.panel.locationData + '.json').then(res => {\n      this.locations = res;\n      this.render();\n    });\n  }\n\n  link(scope, elem, attrs, ctrl) {\n    mapRenderer(scope, elem, attrs, ctrl);\n  }\n}\n\nWorldmapCtrl.templateUrl = 'module.html';\n"]}